name: CI/CD

on:
  push:
    branches:
      - master
      - dev
  workflow_dispatch:

concurrency: ${{ github.ref }}

env:
  PROJECT_ID: jkr-windows
  REGION: us-central1
  GCP_SA: etl-262@jkr-windows.iam.gserviceaccount.com
  ENV_KEY: env-vars
  ENV_FILE: env.yaml

jobs:
  set-env:
    runs-on: ubuntu-latest
    outputs:
      svc-name: ${{ steps.set-svc-name.outputs.svc-name }}
    steps:
      - name: Set env vars (dev)
        if: github.ref_name == 'dev'
        run: |
          echo "SERVICE_NAME=jkr-windows-breezy-dev" >> $GITHUB_ENV
          echo "PUBLIC_URL=X" >> $GITHUB_ENV

      - name: Set env vars (prod)
        if: github.ref_name == 'master'
        run: |
          echo "SERVICE_NAME=jkr-windows-breezy" >> $GITHUB_ENV
          echo "PUBLIC_URL=X" >> $GITHUB_ENV

      - id: set-svc-name
        name: Set Service Name
        run: echo "::set-output name=svc-name::${{ env.SERVICE_NAME}}"

      - name: Create ${{ env.ENV_KEY }}
        run: |
          echo "BREEZY_EMAIL: ${{ secrets.BREEZY_EMAIL }}" >> ${{ env.ENV_FILE }}
          echo "BREEZY_PWD: ${{ secrets.BREEZY_PWD }}" >> ${{ env.ENV_FILE }}

          echo "GCP_SA: ${{ env.GCP_SA }}" >> ${{ env.ENV_FILE }}
          echo "PUBLIC_URL: ${{ env.PUBLIC_URL }}" >> ${{ env.ENV_FILE }}

      - name: Upload ${{ env.ENV_FILE }}
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.ENV_KEY }}
          path: ${{ env.ENV_FILE }}

  deploy:
    runs-on: ubuntu-latest
    needs: set-env
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - run: |
          echo "IMAGE=${{ env.PROJECT_ID }}/${{ needs.set-env.outputs.svc-name }}:${{ github.sha }}" >> $GITHUB_ENV

      - name: Download ${{ env.ENV_FILE }}
        uses: actions/download-artifact@v2
        with:
          name: ${{ env.ENV_KEY }}

      - name: Auth
        uses: "google-github-actions/auth@v0"
        with:
          credentials_json: "${{ secrets.GCP_SA_KEY }}"

      - name: Set up Cloud SDK
        uses: "google-github-actions/setup-gcloud@v0"

      - name: Authorize Docker push
        run: gcloud auth configure-docker

      - name: Build & Push
        run: |-
          docker build -t gcr.io/${{ env.IMAGE }} --build-arg BUILD_ENV=prod .
          docker push gcr.io/${{ env.IMAGE }}

      - name: Deploy to Cloud Run
        run: >-
          gcloud run deploy ${{ needs.set-env.outputs.svc-name }}
          --image=gcr.io/${{ env.IMAGE }}
          --concurrency=1
          --memory=4Gi
          --cpu=2
          --platform=managed
          --service-account=${{ secrets.GCP_SA }}
          --region=${{ env.REGION }}
          --timeout=900
          --env-vars-file=${{ env.ENV_FILE }}

  clean-up:
    runs-on: ubuntu-latest
    if: ${{ always() }}
    needs: deploy
    steps:
      - run: echo "" > ${{ env.ENV_FILE }}

      - uses: actions/upload-artifact@v2
        with:
          name: ${{ env.ENV_KEY }}
          path: ${{ env.ENV_FILE }}
